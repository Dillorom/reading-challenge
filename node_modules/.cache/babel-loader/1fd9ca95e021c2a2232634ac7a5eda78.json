{"ast":null,"code":"import _defineProperty from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/final-project/reading-challenge-client/src/containers/Challenge/LoginForm/LoginForm.js\";\nimport React, { Component } from 'react';\nimport Validator from 'validator';\nimport InlineError from '../../../components/InlineError/InlineError';\nimport PropTypes from 'prop-types';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        email: '',\n        password: ''\n      },\n      loading: false,\n      errors: {}\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState({\n        data: _objectSpread({}, _this.state.data, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.onSubmit = function () {\n      var errors = _this.validate(_this.state.data);\n\n      _this.setState({\n        errors: errors\n      });\n\n      if (Object.keys(errors).length === 0) {\n        _this.props.submit(_this.state.data);\n      }\n    };\n\n    _this.validate = function (data) {\n      var errors = {};\n      if (!Validator.isEmail(data.email)) errors.email = \"Invalid email\";\n      if (!data.password) errors.password = \"Can't be blank\";\n      return errors;\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          errors = _this$state.errors;\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"example@example.com\",\n        value: data.email,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), errors.email && React.createElement(InlineError, {\n        text: errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Make it secure\",\n        value: data.password,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), errors.password && React.createElement(InlineError, {\n        text: errors.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Login\"));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\n;\nLoginForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/home/learn/final-project/reading-challenge-client/src/containers/Challenge/LoginForm/LoginForm.js"],"names":["React","Component","Validator","InlineError","PropTypes","LoginForm","state","data","email","password","loading","errors","onChange","e","setState","target","name","value","onSubmit","validate","Object","keys","length","props","submit","isEmail","propTypes","func","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAuB,WAAvB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,EADL;AAEFC,QAAAA,QAAQ,EAAE;AAFR,OADF;AAKJC,MAAAA,OAAO,EAAE,KALL;AAMJC,MAAAA,MAAM,EAAE;AANJ,K;;UAQRC,Q,GAAW,UAAAC,CAAC;AAAA,aACR,MAAKC,QAAL,CAAc;AACdP,QAAAA,IAAI,oBAAO,MAAKD,KAAL,CAAWC,IAAlB,sBAAyBM,CAAC,CAACE,MAAF,CAASC,IAAlC,EAAyCH,CAAC,CAACE,MAAF,CAASE,KAAlD;AADU,OAAd,CADQ;AAAA,K;;UAKZC,Q,GAAW,YAAM;AACb,UAAMP,MAAM,GAAG,MAAKQ,QAAL,CAAc,MAAKb,KAAL,CAAWC,IAAzB,CAAf;;AACA,YAAKO,QAAL,CAAc;AAACH,QAAAA,MAAM,EAANA;AAAD,OAAd;;AACA,UAAIS,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,MAApB,KAA+B,CAAnC,EAAqC;AACjC,cAAKC,KAAL,CAAWC,MAAX,CAAkB,MAAKlB,KAAL,CAAWC,IAA7B;AACH;AAEJ,K;;UACDY,Q,GAAW,UAAAZ,IAAI,EAAI;AACf,UAAMI,MAAM,GAAG,EAAf;AACA,UAAI,CAACT,SAAS,CAACuB,OAAV,CAAkBlB,IAAI,CAACC,KAAvB,CAAL,EAAoCG,MAAM,CAACH,KAAP,GAAe,eAAf;AACpC,UAAI,CAACD,IAAI,CAACE,QAAV,EAAoBE,MAAM,CAACF,QAAP,GAAkB,gBAAlB;AACpB,aAAOE,MAAP;AACD,K;;;;;;;6BACK;AAAA,wBACqB,KAAKL,KAD1B;AAAA,UACIC,IADJ,eACIA,IADJ;AAAA,UACUI,MADV,eACUA,MADV;AAEJ,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKO,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAO,QAAA,IAAI,EAAC,OAAZ;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,EAAE,EAAC,OAFJ;AAGC,QAAA,WAAW,EAAC,qBAHb;AAIC,QAAA,KAAK,EAAEX,IAAI,CAACC,KAJb;AAKC,QAAA,QAAQ,EAAE,KAAKI,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,EAOCD,MAAM,CAACH,KAAP,IAAgB,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEG,MAAM,CAACH,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPjB,CAFJ,EAWI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAO,QAAA,IAAI,EAAC,UAAZ;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,EAAE,EAAC,UAFJ;AAGC,QAAA,WAAW,EAAC,gBAHb;AAIC,QAAA,KAAK,EAAED,IAAI,CAACE,QAJb;AAKC,QAAA,QAAQ,EAAE,KAAKG,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,EAOCD,MAAM,CAACF,QAAP,IAAmB,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEE,MAAM,CAACF,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPpB,CAZJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBArBJ,CADJ;AA0BH;;;;EAxDmBR,S;;AAyDvB;AAEDI,SAAS,CAACqB,SAAV,GAAsB;AAClBF,EAAAA,MAAM,EAAEpB,SAAS,CAACuB,IAAV,CAAeC;AADL,CAAtB;AAGA,eAAevB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Validator  from 'validator';\nimport InlineError from '../../../components/InlineError/InlineError';\nimport PropTypes from 'prop-types';\n\nclass LoginForm extends Component {\n    state = {\n        data: {\n            email: '',\n            password: ''\n        },\n        loading: false,\n        errors: {}\n    }\n    onChange = e =>\n        this.setState({\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n\n    onSubmit = () => {\n        const errors = this.validate(this.state.data);\n        this.setState({errors});\n        if (Object.keys(errors).length === 0){\n            this.props.submit(this.state.data);\n        }\n\n    }\n    validate = data => {\n        const errors = {};\n        if (!Validator.isEmail(data.email)) errors.email = \"Invalid email\";\n        if (!data.password) errors.password = \"Can't be blank\";\n        return errors;\n      };\n    render(){  \n        const { data, errors } = this.state\n        return(\n            <form onSubmit={this.onSubmit}>\n                <label htmlFor=\"Email\">Email</label>\n                <p><input type=\"email\" \n                    name=\"email\"\n                    id=\"email\"\n                    placeholder=\"example@example.com\"\n                    value={data.email}\n                    onChange={this.onChange}\n                    />\n                {errors.email && <InlineError text={errors.email} />}\n                </p>\n                <label htmlFor=\"password\">Password</label>\n                <p><input type=\"password\" \n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"Make it secure\" \n                    value={data.password}\n                    onChange={this.onChange}\n                    />\n                {errors.password && <InlineError text={errors.password} />}\n                </p>\n                <button>Login</button>\n            </form>\n        )\n\n    }\n};\n\nLoginForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}