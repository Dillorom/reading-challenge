{"ast":null,"code":"import _construct from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/construct\";\nimport _toConsumableArray from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/final-project/reading-challenge-client/src/containers/Challenge/Search/Search.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport AllResults from \"../AllResults/AllResults\";\nimport PropTypes from \"prop-types\";\nvar apiKey = process.env.REACT_APP_API_KEY;\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchText: \"\",\n      error: \"\",\n      fetchingData: false\n    };\n\n    _this.onTextChange = function (e) {\n      _this.setState({\n        searchText: e.target.value\n      });\n    };\n\n    _this.onButtonClick = function () {\n      _this.setState({\n        fetchingData: true\n      });\n\n      var searchText = _this.state.searchText;\n      var requestUri = \"https://cors-anywhere.herokuapp.com/\" + \"https://www.goodreads.com/search/index.xml?key=\".concat(apiKey, \"&q=\").concat(searchText);\n      Axios.get(requestUri).then(function (res) {\n        _this.parseXMLResponse(res.data);\n      }).catch(function (error) {\n        _this.setState({\n          error: error.toString(),\n          fetchingData: false\n        });\n      });\n    };\n\n    _this.parseXMLResponse = function (response) {\n      var parser = new DOMParser();\n      var XMLResponse = parser.parseFromString(response, \"application/xml\");\n      var parseError = XMLResponse.getElementsByTagName(\"parsererror\");\n\n      if (parseError.length) {\n        _this.setState({\n          error: \"There was an error fetching results.\",\n          fetchingData: false\n        });\n      } else {\n        var XMLresults = _construct(Array, _toConsumableArray(XMLResponse.getElementsByTagName(\"work\")));\n\n        var searchResults = XMLresults.map(function (result) {\n          return _this.XMLToJson(result);\n        });\n\n        _this.setState({\n          fetchingData: false\n        }, function () {\n          _this.props.setResults(searchResults);\n        });\n      }\n    };\n\n    _this.XMLToJson = function (XML) {\n      var allNodes = _construct(Array, _toConsumableArray(XML.children));\n\n      var jsonResult = {};\n      allNodes.forEach(function (node) {\n        if (node.children.length) {\n          jsonResult[node.nodeName] = _this.XMLToJson(node);\n        } else {\n          jsonResult[node.nodeName] = node.innerHTML;\n        }\n      });\n      return jsonResult;\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      console.log(this.props.results);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"mr-1 col-sm-9 form-control\",\n        type: \"text\",\n        placeholder: \"Search Books By title, author, or ISBN...\",\n        name: \"searchText\",\n        onChange: this.onTextChange,\n        value: this.state.searchText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"col-sm-2 btn btn-primary\",\n        onClick: this.onButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Search\")), this.state.fetchingData ? React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"loading... \") : this.state.error && React.createElement(\"p\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.error) || React.createElement(AllResults, {\n        books: this.props.results,\n        expandBook: this.props.expandBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nSearch.propTypes = {\n  results: PropTypes.array,\n  setResults: PropTypes.func,\n  expandBook: PropTypes.func\n};\nexport default Search;","map":{"version":3,"sources":["/home/learn/final-project/reading-challenge-client/src/containers/Challenge/Search/Search.js"],"names":["React","Component","Axios","AllResults","PropTypes","apiKey","process","env","REACT_APP_API_KEY","Search","state","searchText","error","fetchingData","onTextChange","e","setState","target","value","onButtonClick","requestUri","get","then","res","parseXMLResponse","data","catch","toString","response","parser","DOMParser","XMLResponse","parseFromString","parseError","getElementsByTagName","length","XMLresults","Array","searchResults","map","result","XMLToJson","props","setResults","XML","allNodes","children","jsonResult","forEach","node","nodeName","innerHTML","console","log","results","expandBook","propTypes","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport AllResults from \"../AllResults/AllResults\";\nimport PropTypes from \"prop-types\";\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nclass Search extends Component {\n  state = {\n    searchText: \"\",\n    error: \"\",\n    fetchingData: false\n  };\n\n  onTextChange = e => {\n    this.setState({\n      searchText: e.target.value\n    });\n  };\n\n  onButtonClick = () => {\n    this.setState({\n      fetchingData: true\n    });\n    const { searchText } = this.state;\n    const requestUri =\n      `https://cors-anywhere.herokuapp.com/` +\n      `https://www.goodreads.com/search/index.xml?key=${apiKey}&q=${searchText}`;\n\n    Axios.get(requestUri)\n      .then(res => {\n        this.parseXMLResponse(res.data);\n      })\n      .catch(error => {\n        this.setState({\n          error: error.toString(),\n          fetchingData: false\n        });\n      });\n  };\n\n  // parse string xml received from goodreads api\n  parseXMLResponse = response => {\n    const parser = new DOMParser();\n    const XMLResponse = parser.parseFromString(response, \"application/xml\");\n    const parseError = XMLResponse.getElementsByTagName(\"parsererror\");\n\n    if (parseError.length) {\n      this.setState({\n        error: \"There was an error fetching results.\",\n        fetchingData: false\n      });\n    } else {\n      const XMLresults = new Array(...XMLResponse.getElementsByTagName(\"work\"));\n      const searchResults = XMLresults.map(result => this.XMLToJson(result));\n      this.setState({ fetchingData: false }, () => {\n        this.props.setResults(searchResults);\n      });\n    }\n  };\n\n  // Function to convert simple XML document into JSON.\n  // Loops through each child and saves it as key, value pair\n  // if there are sub-children, call the same function recursively on its children.\n  XMLToJson = XML => {\n    const allNodes = new Array(...XML.children);\n    const jsonResult = {};\n    allNodes.forEach(node => {\n      if (node.children.length) {\n        jsonResult[node.nodeName] = this.XMLToJson(node);\n      } else {\n        jsonResult[node.nodeName] = node.innerHTML;\n      }\n    });\n    return jsonResult;\n  };\n\n  render() {\n    console.log(this.state)\n    console.log(this.props.results)\n    return (\n      <div>\n        <div className=\"form-group row\">\n          <input\n            className=\"mr-1 col-sm-9 form-control\"\n            type=\"text\"\n            placeholder=\"Search Books By title, author, or ISBN...\"\n            name=\"searchText\"\n            onChange={this.onTextChange}\n            value={this.state.searchText}\n          />\n          <button\n            className=\"col-sm-2 btn btn-primary\"\n            onClick={this.onButtonClick}\n          >\n            Search\n          </button>\n        </div>\n\n        {/**\n         * if fetching data, display \"loading...\", if error, display error message, else display search results\n         */}\n        {this.state.fetchingData ? (\n          <p className=\"lead text-center\">{\"loading... \"}</p>\n        ) : (\n          (this.state.error && (\n            <p className=\"text-danger\">{this.state.error}</p>\n          )) || (\n            <AllResults\n              books={this.props.results}\n              expandBook={this.props.expandBook}\n            />\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  results: PropTypes.array,\n  setResults: PropTypes.func,\n  expandBook: PropTypes.func\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}