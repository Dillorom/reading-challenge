{"ast":null,"code":"import _toConsumableArray from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar API_URL = process.env.REACT_APP_API_URL;\nvar BookService = {\n  fetchBooks: function fetchBooks() {\n    return fetch(\"\".concat(API_URL, \"/books\")).then(function (response) {\n      return response.json();\n    });\n  },\n  createBook: function createBook(book) {\n    var request = {\n      method: 'POST',\n      body: JSON.stringify({\n        book: book\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    return fetch(\"\".concat(API_URL, \"/books\"), request).then(function (response) {\n      return response.json();\n    });\n  },\n  deleteBook: function deleteBook(bookId) {\n    var _this = this;\n\n    var request = {\n      method: 'DELETE'\n    };\n    return fetch(\"\".concat(API_URL, \"/books/\").concat(bookId), request).then(function (response) {\n      if (response.ok) {\n        var index = _this.state.allBooks.findIndex(function (book) {\n          return book.id === bookId;\n        });\n\n        _this.setState({\n          allBooks: _toConsumableArray(_this.state.books.slice(0, index)).concat(_toConsumableArray(_this.state.books.slice(index + 1)))\n        });\n      } else {\n        window.alert(\"Unable to delete the book.\");\n      }\n    }).catch(function (err) {\n      return console.log(\"Received this error while trying to delete a book:\", err);\n    });\n  }\n};\nexport default BookService;","map":{"version":3,"sources":["/home/learn/final-project/reading-challenge-client/src/services/BookService.js"],"names":["API_URL","process","env","REACT_APP_API_URL","BookService","fetchBooks","fetch","then","response","json","createBook","book","request","method","body","JSON","stringify","headers","deleteBook","bookId","ok","index","state","allBooks","findIndex","id","setState","books","slice","window","alert","catch","err","console","log"],"mappings":";AAAA,IAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,UAAU,EAAE,sBAAM;AACd,WAAOC,KAAK,WAAIN,OAAJ,YAAL,CACFO,IADE,CACG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADX,CAAP;AAEH,GAJe;AAMhBC,EAAAA,UANgB,sBAMLC,IANK,EAMC;AACb,QAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBL,QAAAA,IAAI,EAAEA;AADW,OAAf,CAFM;AAKZM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AALG,KAAhB;AASA,WAAOX,KAAK,WAAIN,OAAJ,aAAqBY,OAArB,CAAL,CACFL,IADE,CACG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADX,CAAP;AAEH,GAlBe;AAmBhBS,EAAAA,UAnBgB,sBAmBLC,MAnBK,EAmBG;AAAA;;AACf,QAAMP,OAAO,GAAG;AACrBC,MAAAA,MAAM,EAAE;AADa,KAAhB;AAGA,WAAOP,KAAK,WAAIN,OAAJ,oBAAqBmB,MAArB,GAA+BP,OAA/B,CAAL,CACFL,IADE,CACG,UAAAC,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACY,EAAb,EAAgB;AACZ,YAAMC,KAAK,GAAG,KAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBC,SAApB,CAA8B,UAAAb,IAAI;AAAA,iBAAIA,IAAI,CAACc,EAAL,KAAYN,MAAhB;AAAA,SAAlC,CAAd;;AACA,QAAA,KAAI,CAACO,QAAL,CAAc;AACVH,UAAAA,QAAQ,qBACD,KAAI,CAACD,KAAL,CAAWK,KAAX,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0BP,KAA1B,CADC,4BAED,KAAI,CAACC,KAAL,CAAWK,KAAX,CAAiBC,KAAjB,CAAuBP,KAAK,GAAG,CAA/B,CAFC;AADE,SAAd;AAMH,OARD,MAQO;AACHQ,QAAAA,MAAM,CAACC,KAAP,CAAa,4BAAb;AACH;AACJ,KAbE,EAcFC,KAdE,CAcI,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAY,oDAAZ,EAAkEF,GAAlE,CAAJ;AAAA,KAdP,CAAP;AAeH;AAtCe,CAApB;AAyCA,eAAe5B,WAAf","sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\n\nconst BookService = {\n    fetchBooks: () => {\n        return fetch(`${API_URL}/books`)\n            .then(response => response.json())\n    },\n\n    createBook(book) {\n        const request = {\n            method: 'POST',\n            body: JSON.stringify({\n                book: book\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        return fetch(`${API_URL}/books`, request)\n            .then(response => response.json())\n    },\n    deleteBook(bookId) {\n        const request = {\n\t\t\tmethod: 'DELETE'\n        }\n        return fetch(`${API_URL}/books/${bookId}`, request)\n            .then(response => {\n                if (response.ok){\n                    const index = this.state.allBooks.findIndex(book => book.id === bookId)  \n                    this.setState({\n                        allBooks: [\n                            ...this.state.books.slice(0, index),\n                            ...this.state.books.slice(index + 1)\n                        ]\n                    })\n                } else {\n                    window.alert(\"Unable to delete the book.\")\n                }\n            })\n            .catch(err => console.log(\"Received this error while trying to delete a book:\", err))\n    }\n}\n\nexport default BookService;"]},"metadata":{},"sourceType":"module"}