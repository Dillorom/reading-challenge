{"ast":null,"code":"import _toConsumableArray from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/final-project/reading-challenge-client/src/containers/Challenge/Books/Books.js\";\nimport React, { Component } from 'react';\nimport './Books.css';\nimport Book from '../../../components/Book/Book';\nimport { Link } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport FullBook from '../FullBook/FullBook';\nimport BookService from '../../../services/BookService';\nimport NewBook from '../NewBook/NewBook';\nvar API_URL = process.env.REACT_APP_API_URL;\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allBooks: []\n    };\n\n    _this.bookSelectedHandler = function (id) {\n      _this.props.history.push({\n        pathname: '/books/' + id\n      }); //this.props.history.push('/' + id);\n\n    };\n\n    _this.addBook = function (book) {\n      BookService.createBook(book).then(function (book) {\n        return _this.setState({\n          allBooks: _this.state.allBooks.concat(book)\n        });\n      });\n    };\n\n    _this.deleteBook = function (bookId) {\n      var request = {\n        method: 'DELETE'\n      };\n      return fetch(\"\".concat(API_URL, \"/books/\").concat(bookId), request).then(function (response) {\n        if (response.ok) {\n          var index = _this.state.allBooks.findIndex(function (book) {\n            return book.id === bookId;\n          });\n\n          _this.setState({\n            allBooks: _toConsumableArray(_this.state.allBooks.slice(0, index)).concat(_toConsumableArray(_this.state.allBooks.slice(index + 1)))\n          });\n        } else {\n          window.alert(\"Unable to delete the book.\");\n        }\n      }).catch(function (err) {\n        return console.log(\"Received this error while trying to delete a book:\", err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BookService.fetchBooks().then(function (allBooks) {\n        return _this2.setState({\n          allBooks: allBooks\n        });\n      }, console.log(this.state.allBooks));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state);\n      var allBooks = React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Something went wrong!\");\n\n      if (!this.state.error) {\n        allBooks = this.state.allBooks.map(function (book) {\n          return React.createElement(Link, {\n            to: \"/books/\" + book.id,\n            key: book.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(Book, {\n            title: book.title,\n            author: book.author,\n            img_url: book.img_url,\n            description: book.description,\n            clicked: function clicked() {\n              return _this3.bookSelectedHandler(book.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }));\n        });\n      } // let fullBooks;\n      // if (this.bookSelectHandler) {\n      // \tfullBooks = this.state.allBooks.map(book => {\n      // \t\treturn(\n      // \t\t\t<FullBook \n      // \t\t\ttitle={book.title} \n      // \t\t\tauthor={book.author}\n      // \t\t\timg_url={book.img_url}\n      // \t\t\tdescription={book.description}\n      // \t\t\t/>\n      // \t);\n      // \t});\n      // }\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"Books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, allBooks), React.createElement(\"section\", {\n        className: \"FullBooks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: this.props.match.url + '/:id',\n        render: function render(props) {\n          return React.createElement(FullBook, {\n            books: _this3.state.allBooks,\n            deleteBook: _this3.deleteBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(NewBook, {\n        addBook: this.addBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })); // how do I get to the exact route, so that full page does not show up in books page, until I click on a book -- \n      //exact component={FullBook}\n    }\n  }]);\n\n  return Books;\n}(Component);\n\n;\nexport default Books;","map":{"version":3,"sources":["/home/learn/final-project/reading-challenge-client/src/containers/Challenge/Books/Books.js"],"names":["React","Component","Book","Link","Route","FullBook","BookService","NewBook","API_URL","process","env","REACT_APP_API_URL","Books","state","allBooks","bookSelectedHandler","id","props","history","push","pathname","addBook","book","createBook","then","setState","concat","deleteBook","bookId","request","method","fetch","response","ok","index","findIndex","slice","window","alert","catch","err","console","log","fetchBooks","textAlign","error","map","title","author","img_url","description","match","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Books.css';\nimport Book from '../../../components/Book/Book';\nimport { Link } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport FullBook from '../FullBook/FullBook';\nimport BookService from '../../../services/BookService';\nimport NewBook from '../NewBook/NewBook';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass Books extends Component {\n\tstate = {\n\t\tallBooks: []\n\t}\n\n\tcomponentDidMount() {\n\t\tBookService.fetchBooks().then(allBooks => this.setState({allBooks}),\n\t\tconsole.log(this.state.allBooks)\n\t)}\n\t\n\t\n\tbookSelectedHandler = (id) => {\n\t\tthis.props.history.push({pathname:'/books/' + id});\n\t\t//this.props.history.push('/' + id);\n\t}\n\n\taddBook = book => {\n\t\tBookService.createBook(book).then(book => this.setState({\n\t\t\tallBooks: this.state.allBooks.concat(book)\n\t\t}))\n\t}\n\n\tdeleteBook = bookId => {\n\t\tconst request = {\n\t\tmethod: 'DELETE'\n\t\t}\n\t\treturn fetch(`${API_URL}/books/${bookId}`, request)\n\t\t\t.then(response => {\n\t\t\t\tif (response.ok){\n\t\t\t\t\tconst index = this.state.allBooks.findIndex(book => book.id === bookId)  \n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tallBooks: [\n\t\t\t\t\t\t\t...this.state.allBooks.slice(0, index),\n\t\t\t\t\t\t\t...this.state.allBooks.slice(index + 1)\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\twindow.alert(\"Unable to delete the book.\")\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => console.log(\"Received this error while trying to delete a book:\", err))\n\t}\n\n\trender(){\n\t\tconsole.log(this.state)\n\t\t\t\n\t\tlet allBooks = <p style={{textAlign: 'center'}}>Something went wrong!</p>;\n\t\tif (!this.state.error) {\n\t\t\tallBooks = this.state.allBooks.map(book => {\n\t\t\t\treturn(\n\t\t\t\t<Link to={\"/books/\" + book.id} key={book.id} >\n\t\t\t\t\t <Book\n\t\t\t\t\t\ttitle={book.title} \n\t\t\t\t\t\tauthor={book.author}\n\t\t\t\t\t\timg_url={book.img_url}\n\t\t\t\t\t\tdescription={book.description}\n\t\t\t\t\tclicked={() => this.bookSelectedHandler(book.id)} />\n\t\t\t\t</Link>\n\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\t// let fullBooks;\n\t\t// if (this.bookSelectHandler) {\n\t\t// \tfullBooks = this.state.allBooks.map(book => {\n\t\t// \t\treturn(\n\t\t// \t\t\t<FullBook \n\t\t// \t\t\ttitle={book.title} \n\t\t// \t\t\tauthor={book.author}\n\t\t// \t\t\timg_url={book.img_url}\n\t\t// \t\t\tdescription={book.description}\n\t\t// \t\t\t/>\n\t\t// \t);\n\t\t// \t});\n\t\t// }\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<section className=\"Books\">\n\t\t\t\t\t{allBooks}\t\t\t\t\n\t\t\t\t</section>\n\t\t\t\t<section className=\"FullBooks\">\n\t\t\t\t{/* <Route path={this.props.match.url + '/:id'} render={(props) => <FullBook {...props} books={fullBooks} />} /> */}\n\t\t\t\t\t<Route path={this.props.match.url + '/:id'} render={(props) => <FullBook books={this.state.allBooks} deleteBook={this.deleteBook}/>} /> \n\t\t\t\t</section>\n\t\t\t\t<NewBook addBook={this.addBook} />\n\t\t\t</div>\n\t\t);\n\t\t// how do I get to the exact route, so that full page does not show up in books page, until I click on a book -- \n\t\t//exact component={FullBook}\n\t}\n};\n\nexport default Books;"]},"metadata":{},"sourceType":"module"}