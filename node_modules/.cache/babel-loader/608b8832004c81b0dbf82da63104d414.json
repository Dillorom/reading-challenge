{"ast":null,"code":"var _jsxFileName = \"/home/learn/final-project/reading-challenge-client/src/components/ChallengeTracker/BookCount/BookCount.js\";\nimport React from 'react'; //import PropTypes from 'prop-types';\n\nvar BookCount = function BookCount(props) {\n  var percentToDecimal = function percentToDecimal(decimal) {\n    return Math.round(decimal * 100) + '%';\n  };\n\n  var calcGoalProgress = function calcGoalProgress(total, goal) {\n    return percentToDecimal(total / goal);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"book-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"total-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"You have read \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.total), \" books so far.\")), React.createElement(\"div\", {\n    className: \"goal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Your goal is to read \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.goal), \" books this year.\")), React.createElement(\"div\", {\n    className: \"progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" You have made \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, calcGoalProgress(props.total, props.goal)), \" progress.\")));\n}; // BookCount.propTypes = {\n//     goal: PropTypes.number\n// }\n\n\nexport default BookCount;","map":{"version":3,"sources":["/home/learn/final-project/reading-challenge-client/src/components/ChallengeTracker/BookCount/BookCount.js"],"names":["React","BookCount","props","percentToDecimal","decimal","Math","round","calcGoalProgress","total","goal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAEzB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAa;AAClC,WAAQC,IAAI,CAACC,KAAL,CAAYF,OAAO,GAAG,GAAtB,IAA+B,GAAvC;AACH,GAFD;;AAIA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACtC,WAAON,gBAAgB,CAACK,KAAK,GAACC,IAAP,CAAvB;AACH,GAFD;;AAGA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,KAAK,CAACM,KAAb,CAAlB,mBADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,KAAK,CAACO,IAAb,CAAzB,sBADJ,CAJJ,EAOI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,gBAAgB,CACtCL,KAAK,CAACM,KADgC,EAEtCN,KAAK,CAACO,IAFgC,CAAvB,CAAnB,eADJ,CAPJ,CADJ;AAgBH,CAzBD,C,CA0BA;AACA;AACA;;;AACA,eAAeR,SAAf","sourcesContent":["import React from 'react';\n//import PropTypes from 'prop-types';\n\nconst BookCount = (props) => {\n\n    const percentToDecimal = (decimal) => {\n        return (Math.round((decimal * 100)) +  '%')\n    }\n    \n    const calcGoalProgress = (total, goal) => {\n        return percentToDecimal(total/goal)\n    }\n    return(\n        <div className=\"book-count\">\n            <div className=\"total-books\">\n                <h1>You have read <span>{props.total}</span> books so far.</h1>\n            </div>\n            <div className=\"goal\">\n                <h1>Your goal is to read <span>{props.goal}</span> books this year.</h1>\n            </div>\n            <div className=\"progress\">\n                <h1> You have made <span>{calcGoalProgress(\n                    props.total, \n                    props.goal\n                )}</span> progress.</h1>\n            </div>\n        </div>\n    )\n}\n// BookCount.propTypes = {\n//     goal: PropTypes.number\n// }\nexport default BookCount;"]},"metadata":{},"sourceType":"module"}