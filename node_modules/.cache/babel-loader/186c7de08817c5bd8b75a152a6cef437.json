{"ast":null,"code":"import _classCallCheck from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/learn/final-project/reading-challenge-client/src/components/ChallengeTracker/SetGoal.js\";\nimport React, { Component } from 'react';\n\nvar SetGoal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SetGoal, _Component);\n\n  function SetGoal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SetGoal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SetGoal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      goal: ''\n    };\n\n    _this.handleSubmit = function () {\n      _this.setState({\n        goal: _this.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SetGoal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      debugger;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"goal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Number of books you want to read: \")), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Number\",\n        value: this.state.goal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Set Goal\")));\n    }\n  }]);\n\n  return SetGoal;\n}(Component);\n\nexport default SetGoal;","map":{"version":3,"sources":["/home/learn/final-project/reading-challenge-client/src/components/ChallengeTracker/SetGoal.js"],"names":["React","Component","SetGoal","state","goal","handleSubmit","setState","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE;AADF,K;;UAMRC,Y,GAAe,YAAM;AACjB,YAAKC,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAE,MAAKG,MAAL,CAAYC;AADR,OAAd;AAGH,K;;;;;;;wCAPkB;AACf;AACH;;;6BAMO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAtB,CADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADJ,CADJ;AASH;;;;EAtBiBH,S;;AAwBtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass SetGoal extends Component {\n    state = {\n        goal: ''\n    }\n    componentDidMount(){\n        debugger\n    }\n    handleSubmit = () => {\n        this.setState({\n            goal: this.target.value\n        })\n    }\n    render(){\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"goal\"><strong>Number of books you want to read: </strong></label>\n                    <input type=\"text\" placeholder=\"Number\" value={this.state.goal}/>\n                    <button type=\"submit\">Set Goal</button>\n                </form>\n            </div>\n        )\n    }\n}\nexport default SetGoal;"]},"metadata":{},"sourceType":"module"}