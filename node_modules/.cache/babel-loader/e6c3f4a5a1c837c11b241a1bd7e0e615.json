{"ast":null,"code":"import _objectSpread from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  books: [],\n  selectedBookId: null\n};\n\nvar manageBooks = function manageBooks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_BOOKS':\n      return _objectSpread({}, state, {\n        books: action.payload\n      });\n\n    case \"ADD_BOOK\":\n      return _objectSpread({}, state, {\n        books: state.books.concat(action.payload)\n      });\n\n    case 'DELETE_BOOK':\n      return _objectSpread({}, state, {\n        books: state.books.filter(function (book) {\n          return book.id !== action.payload;\n        })\n      });\n\n    default:\n      console.log(\"initial state is \", state);\n      return state;\n  }\n};\n\nexport default manageBooks;","map":{"version":3,"sources":["/home/learn/final-project/reading-challenge-client/src/store/reducers/books.js"],"names":["initialState","books","selectedBookId","manageBooks","state","action","type","payload","concat","filter","book","id","console","log"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAElD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,+BAAYF,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AACF,SAAK,UAAL;AACE,+BAAYH,KAAZ;AAAmBH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACE,OAA1B;AAA1B;;AACF,SAAK,aAAL;AACE,+BAAWH,KAAX;AAAkBH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAvB;AAAA,SAAvB;AAAzB;;AACF;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCT,KAAjC;AACA,aAAOA,KAAP;AATJ;AAWD,CAbH;;AAcE,eAAeD,WAAf","sourcesContent":["const initialState = {\n  books: [],\n  selectedBookId: null\n}\nconst manageBooks = (state = initialState, action) => {\n\n    switch (action.type) {\n      case 'FETCH_BOOKS':\n        return { ...state, books: action.payload }\n      case \"ADD_BOOK\":\n        return { ...state, books: state.books.concat(action.payload) }\n      case 'DELETE_BOOK':\n        return {...state, books: state.books.filter(book => book.id !== action.payload)}\n      default:\n        console.log(\"initial state is \", state)\n        return state;\n    }\n  };\n  export default manageBooks;"]},"metadata":{},"sourceType":"module"}