{"ast":null,"code":"var _jsxFileName = \"/home/learn/final-project/reading-challenge-client/src/components/ChallengeTracker/BookCount/BookCount.js\";\nimport React from 'react';\nimport { PropTypes } from 'react'; // const bookCount = ({total=85, goal=100}) => {\n//     const percentToDecimal = (decimal) => {\n//         return ((decimal * 100) +  '%')\n//     }\n//     const calcGoalProgress = (total, goal) => {\n//         return percentToDecimal(total/goal)\n//     }\n//     return(\n//     <div className=\"book-count\">\n//          <div className=\"toatl-days\"><h1>You are  \n//             <span>  \n//                 {calcGoalProgress(\n//                     total, \n//                     goal\n//                 )}\n//             </span> done with your challenge.</h1>\n// \t\t</div>\n//         <div className=\"\">\n//             <h1>Your goal is to read {goal} books this year.</h1>\n//         </div>\n//         <h1>You have read {total} books so far.</h1>\n//     </div>\n//     )\n// }\n// export default bookCount;\n\nvar BookCount = function BookCount(props) {\n  var percentToDecimal = function percentToDecimal(decimal) {\n    return Math.round(decimal * 100) + '%';\n  };\n\n  var calcGoalProgress = function calcGoalProgress(total, goal) {\n    return percentToDecimal(total / goal);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"book-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"total-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"You have read \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.total), \" books so far.\")), React.createElement(\"div\", {\n    className: \"goal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Your goal is to read \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.goal), \" books this year.\")), React.createElement(\"div\", {\n    className: \"progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" You have made \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, calcGoalProgress(props.total, props.goal)), \" progress.\")));\n};\n\nBookCount.propTypes = {\n  total: PropTypes.number,\n  goal: PropTypes.number\n};\nexport default BookCount;","map":{"version":3,"sources":["/home/learn/final-project/reading-challenge-client/src/components/ChallengeTracker/BookCount/BookCount.js"],"names":["React","PropTypes","BookCount","props","percentToDecimal","decimal","Math","round","calcGoalProgress","total","goal","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAEzB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAa;AAClC,WAAQC,IAAI,CAACC,KAAL,CAAYF,OAAO,GAAG,GAAtB,IAA+B,GAAvC;AACH,GAFD;;AAIA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACtC,WAAON,gBAAgB,CAACK,KAAK,GAACC,IAAP,CAAvB;AACH,GAFD;;AAGA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,KAAK,CAACM,KAAb,CAAlB,mBADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,KAAK,CAACO,IAAb,CAAzB,sBADJ,CAJJ,EAOI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,gBAAgB,CACtCL,KAAK,CAACM,KADgC,EAEtCN,KAAK,CAACO,IAFgC,CAAvB,CAAnB,eADJ,CAPJ,CADJ;AAgBH,CAzBD;;AA0BAR,SAAS,CAACS,SAAV,GAAsB;AAClBF,EAAAA,KAAK,EAAER,SAAS,CAACW,MADC;AAElBF,EAAAA,IAAI,EAAET,SAAS,CAACW;AAFE,CAAtB;AAIA,eAAeV,SAAf","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'react';\n\n\n// const bookCount = ({total=85, goal=100}) => {\n    \n//     const percentToDecimal = (decimal) => {\n//         return ((decimal * 100) +  '%')\n//     }\n    \n//     const calcGoalProgress = (total, goal) => {\n//         return percentToDecimal(total/goal)\n//     }\n//     return(\n//     <div className=\"book-count\">\n//          <div className=\"toatl-days\"><h1>You are  \n//             <span>  \n//                 {calcGoalProgress(\n//                     total, \n//                     goal\n//                 )}\n//             </span> done with your challenge.</h1>\n// \t\t</div>\n//         <div className=\"\">\n//             <h1>Your goal is to read {goal} books this year.</h1>\n//         </div>\n//         <h1>You have read {total} books so far.</h1>\n        \n//     </div>\n//     )\n// }\n\n\n// export default bookCount;\n\n\nconst BookCount = (props) => {\n\n    const percentToDecimal = (decimal) => {\n        return (Math.round((decimal * 100)) +  '%')\n    }\n    \n    const calcGoalProgress = (total, goal) => {\n        return percentToDecimal(total/goal)\n    }\n    return(\n        <div className=\"book-count\">\n            <div className=\"total-books\">\n                <h1>You have read <span>{props.total}</span> books so far.</h1>\n            </div>\n            <div className=\"goal\">\n                <h1>Your goal is to read <span>{props.goal}</span> books this year.</h1>\n            </div>\n            <div className=\"progress\">\n                <h1> You have made <span>{calcGoalProgress(\n                    props.total, \n                    props.goal\n                )}</span> progress.</h1>\n            </div>\n        </div>\n    )\n}\nBookCount.propTypes = {\n    total: PropTypes.number,\n    goal: PropTypes.number\n}\nexport default BookCount;"]},"metadata":{},"sourceType":"module"}