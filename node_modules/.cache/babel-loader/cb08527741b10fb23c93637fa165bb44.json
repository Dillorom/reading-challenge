{"ast":null,"code":"import _objectSpread from \"/home/learn/final-project/reading-challenge-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  books: []\n};\n\nvar manageBooks = function manageBooks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  //debugger\n  var index;\n  var likedBook;\n  var likedBookLikes;\n\n  switch (action.type) {\n    case 'FETCH_BOOKS':\n      return _objectSpread({}, state, {\n        books: action.payload\n      });\n\n    case \"ADD_BOOK\":\n      return _objectSpread({}, state, {\n        books: state.books.concat(action.payload)\n      });\n\n    case 'DELETE_BOOK':\n      return _objectSpread({}, state, {\n        books: state.books.filter(function (book) {\n          return book.id !== action.payload.id;\n        })\n      });\n\n    case \"INCREMENT_LIKE_COUNTER\":\n      //return {...state, books: state.books.filter(book => book.id == action.payload.id)}\n      index = state.books.findIndex(function (book) {\n        return book.id === action.payload.id;\n      });\n      likedBook = state.books[index]; //debugger\n\n      likedBookLikes = likedBook.likes;\n      return _objectSpread({}, state, state.books, {\n        likedBookLikes: likedBookLikes + 1\n      });\n    //     return {\n    //       ...state.books.slice(0, index),\n    //       ...state, likedBookLikes: likedBookLikes + 1,\n    //       ...state.books.slice(index + 1)\n    // };\n\n    case 'SORT_BY_LIKES':\n      action.payload.sort(function (a, b) {\n        return a.likes - b.likes;\n      });\n      return Object.assign([{}], _objectSpread({}, state));\n\n    default:\n      return state;\n  }\n};\n\nexport default manageBooks;","map":{"version":3,"sources":["/home/learn/final-project/reading-challenge-client/src/store/reducers/books.js"],"names":["initialState","books","manageBooks","state","action","index","likedBook","likedBookLikes","type","payload","concat","filter","book","id","findIndex","likes","sort","a","b","Object","assign"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;AACpD;AACA,MAAIC,KAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,cAAJ;;AAEE,UAAQH,MAAM,CAACI,IAAf;AACE,SAAK,aAAL;AACE,+BAAYL,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACK;AAAjC;;AACF,SAAK,UAAL;AACE,+BAAYN,KAAZ;AAAmBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,MAAZ,CAAmBN,MAAM,CAACK,OAA1B;AAA1B;;AACF,SAAK,aAAL;AACE,+BAAWN,KAAX;AAAkBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYU,MAAZ,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACK,OAAP,CAAeI,EAA/B;AAAA,SAAvB;AAAzB;;AACF,SAAK,wBAAL;AACE;AAEAR,MAAAA,KAAK,GAAGF,KAAK,CAACF,KAAN,CAAYa,SAAZ,CAAsB,UAAAF,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACK,OAAP,CAAeI,EAA/B;AAAA,OAA1B,CAAR;AACAP,MAAAA,SAAS,GAAGH,KAAK,CAACF,KAAN,CAAYI,KAAZ,CAAZ,CAJF,CAKE;;AACAE,MAAAA,cAAc,GAAGD,SAAS,CAACS,KAA3B;AAEA,+BAAYZ,KAAZ,EAAsBA,KAAK,CAACF,KAA5B;AAAmCM,QAAAA,cAAc,EAAEA,cAAc,GAAG;AAApE;AAEJ;AACA;AACA;AACA;AACA;;AACA,SAAK,eAAL;AACQH,MAAAA,MAAM,CAACK,OAAP,CAAeO,IAAf,CAAoB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClC,eAAOD,CAAC,CAACF,KAAF,GAAUG,CAAC,CAACH,KAAnB;AACD,OAFD;AAIA,aAAOI,MAAM,CAACC,MAAP,CAAc,CAAC,EAAD,CAAd,oBAAuBjB,KAAvB,EAAP;;AACN;AAEE,aAAOA,KAAP;AA9BJ;AAgCD,CAtCH;;AAuCE,eAAeD,WAAf","sourcesContent":["const initialState = {\n  books: [], \n  }\nconst manageBooks = (state = initialState, action) => {\n  //debugger\n  let index;\n  let likedBook;\n  let likedBookLikes;\n\n    switch (action.type) {\n      case 'FETCH_BOOKS':\n        return { ...state, books: action.payload }\n      case \"ADD_BOOK\":\n        return { ...state, books: state.books.concat(action.payload)}\n      case 'DELETE_BOOK':\n        return {...state, books: state.books.filter(book => book.id !== action.payload.id)}\n      case \"INCREMENT_LIKE_COUNTER\":\n        //return {...state, books: state.books.filter(book => book.id == action.payload.id)}\n   \n        index = state.books.findIndex(book => book.id === action.payload.id); \n        likedBook = state.books[index];\n        //debugger\n        likedBookLikes = likedBook.likes\n      \n        return { ...state, ...state.books, likedBookLikes: likedBookLikes + 1};\n      \n    //     return {\n    //       ...state.books.slice(0, index),\n    //       ...state, likedBookLikes: likedBookLikes + 1,\n    //       ...state.books.slice(index + 1)\n    // };\n    case 'SORT_BY_LIKES':\n            action.payload.sort(function (a, b) {\n              return a.likes - b.likes;\n            });\n       \n            return Object.assign([{}],{...state});\n      default:\n      \n        return state;\n    }\n  };\n  export default manageBooks;\n\n "]},"metadata":{},"sourceType":"module"}